#! /bin/bash

## for any machine
alias reload='. ~/.bashrc'
alias ls='ls --color=auto'
alias ll='ls --color=auto -lh'
alias lh='ls -d .!(|.)'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias x=xargs
alias ..='cd ..'
alias ...='cd .. && cd ..'
alias ...='cd .. && cd ..'
alias -- -='cd -'
alias ports='sudo netstat -tunpl'   # show listening ports
alias fn='find -name'               # find by name
function ftn {                      # find by type and name
    find -type $1 -name "$2"
}

### for personal machines
alias copy='head -c -1 | xclip -selection clipboard' # copy to clipboard
alias r='history -r'                # reload history
alias erc='code ~/.bashrc'          # edit .bashrc
alias b='cd ~/bash'
alias ea='code ~/bash/aliases'      # edit aliases
alias open=xdg-open
alias py=python3.6
alias py2=python2
alias ipy=ipython

# terminator
# alias splith='xdotool key ctrl+a'
# alias splitv='xdotool key ctrl+shift+e'

### git
alias g=git
alias gs='git status'
alias gls='git ls-files'
alias ga='git add -A'
alias gc='git commit -m'
alias gac='git commit -am'
alias grs='git reset'
alias gac='git add -A && git commit -m'
alias gp='git push'
alias 'gc!'='git commit -v --amend -m'
alias gl='git log --pretty='\''format:%Cgreen%h%Creset %an - %s'\'' --graph'
alias gl1='git log --graph --pretty=format:"%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset" --date=relative'
function gcd {
    if [[ $# > 0 ]]; then
        cd $(dirname $1)
    fi

    until [[ -d .git || `pwd` == '/' ]]; do
        cd ..
    done
}

### Docker
alias d=docker
alias di='docker images'
alias drmi='docker rmi'
alias drun='docker run -it --rm'
alias dps='docker ps'
alias dpsq='docker ps -q'
alias dpsa='docker ps -a'
alias dpsaq='docker ps -aq'
# alias drmf='docker rm -f'
alias drm='docker rm $(docker ps -q)'
alias drmall='docker rm $(docker ps -aq)'
alias dbuild='docker build . -t'
# alias drm='docker rm'

#################### FUNCTIONS ##############################

function path {
    if [[ $# == 0 ]]
    then
        p=$(pwd)
    else
        p=$(python -c "from sys import *; from os.path import *; print abspath(argv[1])" "$1")
    fi
    echo "$p"
    echo "$p" | head -c -1 | xclip -selection clipboard 2>/dev/null
}

function f {
    # f = field
    awk "{print \$$1}"
}


# make ps more useful
# ps1: print all processed
# ps1 <filter>: filtered processed
# ps1 <filter> 1: show pids
# ps1 <filter> 2: kill filtered processs
function ps1 {
    if [[ $# == 0 ]]; then
        ps -ef
    elif [[ $# == 1 ]]; then
        filter=$1
        ps -ef | grep -v grep | grep "$filter"
    else
        if [[ $2 == "pid" || $2 == "p" ]]; then
            ps -ef | grep -v grep | grep "$filter" | awk '{print $2}'
        elif [[ $2 == "kill" || $2 == "k" ]]; then
            ps -ef | grep -v grep | grep "$filter" | awk '{print $2}' | xargs kill
        else
            echo "Unrecognized subcmd: $2"
        fi
    fi
}

function cd {
    if [[ $# -ge 1 && -f $1 ]]; then
        builtin cd $(dirname "$1")
    else
        builtin cd "$@"
    fi
}


#### not frequent
function where {
    # show the real file path of a command
    if [[ $# -eq 0 ]]; then
        echo "Missing argument: command"
    else
        echo $(realpath `which $1`)
    fi
}

# ===== for personal computers only
function nbcd {
    file_path=$1
    cd `dirname $file_path`
    while [[ ! -f build.xml || `pwd` == '/' ]]
    do
        cd ..
    done
}

function exe {
    chmod u+x "$@"
}