#! /bin/bash

. ~/.bash/bashinit
. ~/.bash/prompt
. ~/.bash/aliases


. /usr/share/autojump/autojump.sh


alias ls='ls --color=auto'
alias ll='/bin/ls --color=auto -lh'

alias grep='grep --color=auto'
alias egrep='egrep --color=auto'

# copy to clipboard
alias copy='head -c -1 | xclip -selection clipboard'

# show listening ports
alias ports='sudo netstat -tunpl'

# edit .bashrc
alias rc="code $HOME/.bashrc"

alias ..='cd ..'
alias -- -='cd -'

# reload history
alias r='history -r'


function path {
    # tee /dev/tty: only works from a terminal
    if [[ $# == 0 ]]
    then
        # current directory
        pwd | tee /dev/tty | head -c -1 | xclip -selection clipboard
    else
        # a sub path
        realpath $1 | tee /dev/tty | head -c -1 | xclip -selection clipboard
    fi
}

function where {
    # show the real file path of a command
    if [[ $# -eq 0 ]]; then
        echo "Missing argument: command"
    else
        echo $(realpath `which $1`)
    fi
}

# ===== env.sh files
ENV='ENV_FILE=$BASH_SOURCE && ENV_DIR=$(dirname $BASH_SOURCE) && cd $ENV_DIR'

function home {
    # cd to the directory containing env.sh
    if [ -z ${ENV_FILE+x} ]; then
        echo "No configed env.sh"
        return 1
    fi

    cd "$ENV_DIR"
}

function e {
    # edit the current env.sh
    if [ -z ${ENV_FILE+x} ]; then
        echo "No configed env.sh"
        return 1
    fi
    code $ENV_FILE
}

# ===== END of env.sh files

# print pids of filtered processes
# often used after ps1
# ps1: print all processed
# ps1 <filter>: filtered processed
# ps1 <filter> 1: show pids
# ps1 <filter> 2: kill filtered processs
function ps1 {
    if [[ $# == 0 ]]; then
        ps -ef
    elif [[ $# == 1 ]]; then
        filter=$1
        ps -ef | grep -v grep | grep "$filter"
    else
        if [[ $2 == "pid" || $2 == "p" ]]; then
            ps -ef | grep -v grep | grep "$filter" | awk '{print $2}'
        elif [[ $2 == "kill" || $2 == "k" ]]; then
            ps -ef | grep -v grep | grep "$filter" | awk '{print $2}' | xargs kill
        else
            echo "Unrecognized subcmd: $2"
        fi
    fi
}

function ccd {
	cd $(dirname $1)
}

function nbcd {
    file_path=$1
    cd `dirname $file_path`
    while [ ! -f build.xml ]; do
        cd ..
    done
}

PATH=$(tr -d $'\n ' <<< "
    $HOME/scripts:
    $PATH
")

alias g=git
alias gs='git status'
alias gaa='git add -A'
alias gac='git commit -am'
alias gc='git commit -m'
alias 'gc!'='git commit -v --amend'
alias gl='git log --pretty='\''format:%Cgreen%h%Creset %an - %s'\'' --graph'
alias glg='git log --graph --pretty=format:"%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset" --date=relative'
alias gp='git push'

# ===============================================================================================






[[ -f ~/.localrc ]] && . ~/.localrc


# ===============================================================================================


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/cuongvt4/.sdkman"
[[ -s "/home/cuongvt4/.sdkman/bin/sdkman-init.sh" ]] && source "/home/cuongvt4/.sdkman/bin/sdkman-init.sh"
